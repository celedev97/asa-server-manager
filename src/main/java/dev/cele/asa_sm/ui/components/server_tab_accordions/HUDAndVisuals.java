package dev.cele.asa_sm.ui.components.server_tab_accordions;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import dev.cele.asa_sm.dto.AsaServerConfigDto;
import dev.cele.asa_sm.ui.components.AccordionTopBar;

import javax.swing.*;
import java.awt.*;

public class HUDAndVisuals {
    private JPanel contentPane;
    private JCheckBox allowCrosshairCheckBox;
    private JCheckBox allowThirdPersonViewCheckBox;
    private JCheckBox allowPlayerGammaSettingsPvPCheckBox;
    private JCheckBox allowHUDCheckBox;
    private JCheckBox showFloatingDamageTextCheckBox;
    private JCheckBox allowPlayerGammaSettingsPvECheckBox;
    private JCheckBox allowMapPlayerLocationCheckBox;
    private JCheckBox allowHitMarkersCheckBox;

    private AsaServerConfigDto configDto;

    public HUDAndVisuals(AsaServerConfigDto configDto) {
        this.configDto = configDto;
        SwingUtilities.invokeLater(this::afterInit);
    }

    private void afterInit() {
        allowCrosshairCheckBox.setSelected(
                configDto.getGameUserSettingsINI().getServerSettings().getServerCrosshair()
        );
        allowCrosshairCheckBox.addActionListener(e ->
                configDto.getGameUserSettingsINI().getServerSettings().setServerCrosshair(allowCrosshairCheckBox.isSelected())
        );

        allowThirdPersonViewCheckBox.setSelected(
                configDto.getGameUserSettingsINI().getServerSettings().getAllowThirdPersonPlayer()
        );
        allowThirdPersonViewCheckBox.addActionListener(e ->
                configDto.getGameUserSettingsINI().getServerSettings().setAllowThirdPersonPlayer(allowThirdPersonViewCheckBox.isSelected())
        );

        allowPlayerGammaSettingsPvPCheckBox.setSelected(
                configDto.getGameUserSettingsINI().getServerSettings().getEnablePvPGamma()
        );
        allowPlayerGammaSettingsPvPCheckBox.addActionListener(e ->
                configDto.getGameUserSettingsINI().getServerSettings().setEnablePvPGamma(allowPlayerGammaSettingsPvPCheckBox.isSelected())
        );

        allowHUDCheckBox.setSelected(
                !configDto.getGameUserSettingsINI().getServerSettings().getServerForceNoHUD()
        );
        allowHUDCheckBox.addActionListener(e ->
                configDto.getGameUserSettingsINI().getServerSettings().setServerForceNoHUD(
                        !allowHUDCheckBox.isSelected()
                )
        );

        showFloatingDamageTextCheckBox.setSelected(
                configDto.getGameUserSettingsINI().getServerSettings().getShowFloatingDamageText()
        );
        showFloatingDamageTextCheckBox.addActionListener(e ->
                configDto.getGameUserSettingsINI().getServerSettings().setShowFloatingDamageText(showFloatingDamageTextCheckBox.isSelected())
        );

        allowPlayerGammaSettingsPvECheckBox.setSelected(
                configDto.getGameUserSettingsINI().getServerSettings().getEnablePvPGamma()
        );
        allowPlayerGammaSettingsPvECheckBox.addActionListener(e ->
                configDto.getGameUserSettingsINI().getServerSettings().setEnablePvPGamma(allowPlayerGammaSettingsPvECheckBox.isSelected())
        );

        allowMapPlayerLocationCheckBox.setSelected(
                configDto.getGameUserSettingsINI().getServerSettings().getShowMapPlayerLocation()
        );
        allowMapPlayerLocationCheckBox.addActionListener(e ->
                configDto.getGameUserSettingsINI().getServerSettings().setShowMapPlayerLocation(allowMapPlayerLocationCheckBox.isSelected())
        );

        allowHitMarkersCheckBox.setSelected(
                configDto.getGameUserSettingsINI().getServerSettings().getAllowHitMarkers()
        );
        allowHitMarkersCheckBox.addActionListener(e ->
                configDto.getGameUserSettingsINI().getServerSettings().setAllowHitMarkers(allowHitMarkersCheckBox.isSelected())
        );


    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(panel1, BorderLayout.CENTER);
        allowCrosshairCheckBox = new JCheckBox();
        allowCrosshairCheckBox.setText("Allow Crosshair");
        panel1.add(allowCrosshairCheckBox, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        allowThirdPersonViewCheckBox = new JCheckBox();
        allowThirdPersonViewCheckBox.setText("Allow Third-Person View");
        panel1.add(allowThirdPersonViewCheckBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        allowPlayerGammaSettingsPvPCheckBox = new JCheckBox();
        allowPlayerGammaSettingsPvPCheckBox.setText("Allow Player Gamma Settings in PvP");
        panel1.add(allowPlayerGammaSettingsPvPCheckBox, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        allowHUDCheckBox = new JCheckBox();
        allowHUDCheckBox.setText("Allow HUD");
        panel1.add(allowHUDCheckBox, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        showFloatingDamageTextCheckBox = new JCheckBox();
        showFloatingDamageTextCheckBox.setText("Show Floating Damage Text");
        panel1.add(showFloatingDamageTextCheckBox, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        allowPlayerGammaSettingsPvECheckBox = new JCheckBox();
        allowPlayerGammaSettingsPvECheckBox.setText("Allow Player Gamma Settings in PvE");
        panel1.add(allowPlayerGammaSettingsPvECheckBox, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        allowMapPlayerLocationCheckBox = new JCheckBox();
        allowMapPlayerLocationCheckBox.setText("Allow Map Player Location");
        panel1.add(allowMapPlayerLocationCheckBox, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        allowHitMarkersCheckBox = new JCheckBox();
        allowHitMarkersCheckBox.setText("Allow Hit Markers");
        panel1.add(allowHitMarkersCheckBox, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final AccordionTopBar accordionTopBar1 = new AccordionTopBar();
        accordionTopBar1.setExpanded(true);
        accordionTopBar1.setTitle("HUD And Visuals");
        contentPane.add(accordionTopBar1, BorderLayout.NORTH);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
